#!/usr/bin/python3
def merge_sort(arr):
    n = arr.length()
    if n <= 1:
        return arr

   # arr is indexed 0 through n-1, inclusive
    mid = floor(n/2)

    first_half = merge_sort(arr[mid-1])
    second_half = merge_sort(arr[mid:n-1])
    return merge(first_half, second_half)

def  merge(arr1, arr2):
    result = []
    while arr1.length() > 0 and arr2.length() > 0:
        if(arr1[0] < arr2[0]):
            print('1')
            result.append(arr1[0])
            arr1.remove_first()
        else:
            print('2')
            result.append(arr2[0])
            arr2.remove_first()

    result.append(arr1)
    result.append(arr2)
    return result

import sys
from collections import defaultdict
cases = sys.stdin.readlines()
for case in range(1,len(cases)):
    letters = defaultdict(int)
    for letter in cases[case]:
        letters[letter] += 1
    letters['C'] /= 2
    words = min(int(letters[x] ) for x in "HACKERCUP")
    print("Case #{}: {}".format(case,words))
for case in range(1, len(cases)):
    data = cases[case].split()
    w, h = int(data[0]), int(data[1])
    words = data[2:]
    print "Case #{}: {}".format(case, solve(w, h, words))





